@{
    ViewData["Title"] = "Home Page";
}

<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js" type="text/javascript"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />


<style>

    .dropdown-submenu {
        position: relative;
    }

        .dropdown-submenu .dropdown-menu {
            top: 0;
            left: 100%;
            margin-top: -6px;
            margin-left: 0;
            display: none;
        }

        .dropdown-submenu:hover .dropdown-menu {
            display: block;
        }


    .dropdown-item {
        padding: 10px 20px;
    }

    .product-image {
        height: 200px;
        object-fit: contain;
        width: 100%;
    }

    .card {
        height: 100%;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .btn {
        margin-top: auto;
    }

    .view-details-btn {
        margin-top: 10px;
        background-color: #28a745;
        color: white;
    }

        .view-details-btn:hover {
            background-color: #218838;
        }

    .add-to-cart-btn {
        margin-top: 10px;
        background-color: #007bff !important;
        color: white !important;
        border: none;
        transition: none;
    }

        .add-to-cart-btn:hover {
            background-color: #007bff !important;
            color: white !important;
        }

        .add-to-cart-btn:focus {
            outline: none !important;
        }

    .add-to-cart-btn {
        background-color: #007bff !important;
        color: white !important;
        border: none;
    }

        .add-to-cart-btn:hover {
            background-color: #007bff !important;
            color: white !important;
        }

    .view-details-btn {
        background-color: transparent;
        color: #28a745;
        border: 1px solid #28a745;
    }

        .view-details-btn:hover {
            background-color: #28a745;
            color: white;
            border: 1px solid #218838;
        }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-menu {
        display: block;
        opacity: 1;
        visibility: visible;
    }

    /* Initially, the dropdown menu should be hidden */
    .dropdown-menu {
        display: none;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
    }

    /* Optional: Change button background color on hover */
    .dropdown:hover > .btn-primary {
        background-color: #0056b3; /* Darker blue background */
        border-color: #0056b3; /* Darker border color */
    }
</style>


<div class="row">

    <!--Code for displaying dropdown list -->

    <div class="col-md-2 bg-light p-3">

        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle w-100 btn-dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Category
            </button>
            <ul class="dropdown-menu ul-category w-100">
            </ul>
        </div>
        <br />
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle w-100 btn-dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Brand
            </button>
            <ul class="dropdown-menu ul-brand w-100">
            </ul>
        </div>
    </div>

    <!-- Code for displaying Search bar, Toggle View button, ProductLayout -->
    <div class="col-md-10">

        <!-- Code for search bar and toggle btn -->
        <div class="row d-flex justify-content-center my-3">
            <div class="col-md-6 d-flex">

                <input type="text" class="form-control" placeholder="Search for products..." name="search" id="textSearch">

                <button class="search-button btn btn-primary ms-2" type="button" id="btnSearch">Search</button>

                <button id="toggleViewBtn" class="btn btn-light ms-2">
                    <i class="fas fa-th-large"></i>
                </button>
            </div>
        </div>

        <!-- Code for productLayout-->
        <div id="productLayout">

            <div id="gridView" class="view" style="display: block;">
                <div id="productGrid" class="container">
                    <div class="row" id="productGridRow">
                    </div>
                </div> <!-- Grid View  -->
            </div>
            <div id="cardView" class="view" style="display: none;">
                <ul class="list-unstyled">
                </ul> <!-- Card View  -->
            </div>
        </div>
    </div>
</div>


<script>
    // function for dynaiclly rendering gridLayout
    let gridCard = (data) => {
        // Generate the product HTML for all cards and update the product grid
        var productHtml = '';
        data.forEach(function (card) {
            productHtml += `
                    <div class="col-12 col-sm-6 col-md-4 mb-4">
                        <div class="card h-100">
                            <img src="${card.imageUrl}" class="card-img-top product-image" alt="${card.title}" />
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">${card.title}</h5>
                                <p class="card-text">₹ ${card.price}</p>
                                <!-- View Details Button (Green) -->
                                <a href="/Products/Details/${card.id}" class="btn view-details-btn mt-auto">View Details</a>
                                <!-- Add to Cart Button (Blue) -->
                                <button class="btn add-to-cart-btn mt-2"
                                        data-id="${card.id}"
                                        data-title="${card.title}"
                                        data-price="${card.price}"
                                        data-description="${card.description}"
                                        data-imageUrl="${card.imageUrl}"
                                        data-stock="${card.stock}"
                                        data-category="${card.category}"
                                        data-brand="${card.brand}">
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                `;
        });

        // Update the product grid in the DOM with the generated HTML
        $('#productGridRow').html(productHtml);
    };

    //function for dynamically rendering listCard layout
    let listCard = (products) => {
        $('ul.list-unstyled').html('');  // Clear the list before appending
        $.each(products, (index, item) => {
            var cardHtml = `
                                    <li class="d-flex justify-content-center">
                                        <div class="card mb-3 w-75">
                                            <div class="row g-0">
                                                <div class="col-md-4">
                                                    <img src="${item.imageUrl}" class="img-fluid rounded-start" alt="${item.title}">
                                                </div>
                                                <div class="col-md-8 d-flex align-items-center">
                                                    <div class="card-body">
                                                        <h5 class="card-title">${item.title}</h5>
                                                        <p class="card-text text-secondary">Rs ${item.price}</p>

                                                        <!-- More Details Button (Only Green on Hover) -->
                                                        <a class="w-25 btn view-details-btn btn-sm btn-soft-secondary rounded-5" href="/Products/Details/${item.id}">More Details</a>


                                                        <!-- Add to Cart Button (Always Blue) -->
                                                        <a class=" w-25 btn add-to-cart-btn btn-sm btn-sm-wide rounded-5"
                                                           href="#"
                                                           data-id="${item.id}"
                                                           data-title="${item.title}"
                                                           data-price="${item.price}"
                                                           data-description="${item.description}"
                                                           data-imageUrl="${item.imageUrl}"
                                                           data-stock="${item.stock}"
                                                           data-category="${item.category}"
                                                           data-brand="${item.brand}">
                                                           Add to Cart
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </li>`;
            $('ul.list-unstyled').append(cardHtml);
        });
    }

    //function to load all products
    let loadAllProducts = () => {
        console.log("hello")
        $.ajax({
            url: "http://localhost:5218/api/products",
            type: 'GET',
            xhrFields: {
                withCredentials: true  // Ensures cookies are sent with the request
            },
            success: function (data) {
                console.log(data)
                gridCard(data)
                listCard(data)
            },
            error: function () {
                alert("An error occurred while loading products.");
            }
        });
    }

    // function to load products by categories
    let loadProductsByCat = (category) => {
        $.ajax({
            url: "http://localhost:5218/api/products/category/" + category,
            type: 'GET',
            xhrFields: {
                withCredentials: true  // Ensures cookies are sent with the request
            },
            success: function (data) {
                gridCard(data)
                listCard(data)
            },
            error: function () {
                alert("An error occurred while loading products.");
            }
        });
    }

    let displayCategory = (categories) => {
        let categoryHtml = '';
        // Loop through categories and add them to the dropdown
        categories.forEach(function (category) {
            categoryHtml += `
                            <li class="dropdown-submenu">
                                <button class="dropdown-item dropdown-toggle" name="btn-category" type="button" data-category="${category}">
                                    ${category}
                                </button>
                            </li>
                        `;
        });
        // Append to the dropdown
        $('.ul-category').html(categoryHtml);

        console.log("added category")
        categories.forEach(function (category) {
            loadDdBrand(category)
        });


    }

    let displayBrands = (category, brands) => {
        let brandHtml = '';
        brands.forEach(function (brand) {
            brandHtml += `<li class=><button class="dropdown-item dropdown-toggle" type="button" name="btn-brands" data-brand="${brand}">${brand}</button></li>`;
        });
        // Append the brands to the corresponding dropdown
        $(`#brands-${category}`).html(brandHtml);


    }

    let loadDdBrand = (category) => {
        //console.log(category)
        $.ajax({
            url: "http://localhost:5218/api/products/brandList/" + category,
            type: 'GET',
            xhrFields: {
                withCredentials: true  // Ensures cookies are sent with the request
            },
            success: function (brands) {
                console.log(brands)
                displayBrands(category, brands)
            },
            error: function () {
                alert("An error occurred while loading brands.");
            }
        });
    }

    let loadDdCategory = () => {
        $.ajax({
            url: "http://localhost:5218/api/products/categoryList",
            type: 'GET',
            xhrFields: {
                withCredentials: true  // Ensures cookies are sent with the request
            },
            success: function (category) {
                console.log("calling displaycategpry");
                displayCategory(category);
            },
            error: function () {
                alert("An error occurred while loading categories.");
            }
        });
    }

    $(document).ready(() => {


        const toggleViewBtn = document.getElementById('toggleViewBtn');
        const gridView = document.getElementById('gridView');
        const cardView = document.getElementById('cardView');
        // Set initial state (Grid view)
        let isGridView = true;
        toggleViewBtn.addEventListener('click', () => {
            // Toggle the view state
            isGridView = !isGridView;
            // Toggle visibility
            if (isGridView) {
                gridView.style.display = 'block'; // Show grid view
                cardView.style.display = 'none';  // Hide card view
                toggleViewBtn.innerHTML = '<i class="fas fa-th-large"></i>'; // Set Grid view icon
            } else {
                cardView.style.display = 'block'; // Show card view
                gridView.style.display = 'none';  // Hide grid view
                toggleViewBtn.innerHTML = '<i class="fas fa-list"></i>'; // Set List view icon
            }
        });

        loadDdCategory()
        console.log("calling load products");
        loadAllProducts()

        //handle to category buttons - event delegation as buttons are loaded dynamically
        $(document).on('click', 'button[name="btn-category"]', function () {
            const category = $(this).data('category');
            loadProductsByCat(category);
        });



        // Handle Add to Cart button click
        $(document).on('click', '.add-to-cart-btn', function (e) {
            e.preventDefault();  // Prevent the default anchor action

            // Retrieve product data from the button's data attributes
            var productData = {
                id: $(this).data('id'),
                title: $(this).data('title'),
                price: $(this).data('price'),
                description: $(this).data('description'),
                imageUrl: $(this).data('imageurl'),
                stock: $(this).data('stock'),
                category: $(this).data('category'),
                brand: $(this).data('brand')
            };

            // Add the product to the shopping cart via an AJAX POST request
            $.ajax({
                url: 'http://localhost:5218/api/shoppingcart',
                method: 'POST',
                xhrFields: {
                    withCredentials: true  // Ensures cookies are sent with the request
                },
                contentType: 'application/json',
                data: JSON.stringify(productData),
                success: function (response) {
                    alert(response.message); // Show success message
                },
                error: function (xhr, status, error) {
                    console.error("Error adding product to cart:", error);
                    alert("Failed to add product to cart.");
                }
            });
        });


        //function to handle search button click
        $('#btnSearch').click(() => {
            let searchQuery = $("#textSearch").val();
            console.log(searchQuery)
            loadProductsByCat(searchQuery)
        });
    });

</script>