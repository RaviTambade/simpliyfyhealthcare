@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<div class="container mt-4">
    <h1 class="text-center">@ViewBag.Title</h1>

    <!-- Order Summary Section -->
    <div class="card mb-4">
        <div class="card-header">
            <h4>Customer Details</h4>
        </div>
        <div class="card-body">
            <table class="table table-bordered table-striped" id="tblCustomerSummary">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer Name</th>
                        <th>Date</th>
                        <th>Price</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <!-- Order Details Section -->
    <div class="card mb-4">
        <div class="card-header">
            <h4>Order Details</h4>
        </div>
        <div class="card-body">
            <table class="table table-bordered table-striped" id="tblOrderItemsList">
                <thead>
                    <tr>
                        <th>Serial No</th>
                        <th>Product Name</th>
                        <th>Quantity</th>
                        <th>Unit Price</th>
                        <th>SubTotal Price</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4" class="text-end"><strong>Total Price</strong></td>
                        <td>
                            $
                            <strong id="txtOrderTotal">

                            </strong>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="card-body row">
        <div class="col-2 text-center">
            <img src="" class="img-fluid rounded" alt="Product Image" />
        </div>
        <div class="col-5">
            <h6 class="mb-1">Product Name</h6>
            <p class="text-muted mb-1">Brand: <strong>Brand A</strong></p>
            <p class="mb-0">Description: ABCD BCD</p>
        </div>
        <div class="col-2 text-center">
            <p class="mb-1 price-tag">$10.00</p>
            <p>Qty: <strong>3</strong></p>
        </div>
        <div class="col-3 text-end">
            <p class="mb-0">Subtotal: $30.00</p>
        </div>
    </div>

    <!-- Action Buttons Section -->
    <div class="d-flex justify-content-between">
        <button class="btn btn-danger" id="cancelOrderButton" onclick="cancelOrder()">Cancel Order</button>
        <button class="btn btn-success" id="proceedToPaymentButton" onclick="proceedToPayment()">Proceed to Payment</button>
    </div>
</div>


<script>
    // To fetrch the customer detail in the summary section

    var displayOrderItems = (item) => {
        var orderItemRow = `
        <tr>
        <td>${item.srno}</td>
        <td>${item.name}</td>
        <td>${item.quantity}</td>
        <td>\$${item.price}</td>
        <td>\$${item.subtotal}</td>
        </tr>
                `;
        $('#tblOrderItemsList tbody').append(orderItemRow);
    };

    var displayCustomerSummary = (item) => {
        var customerSummaryRow = `
        <tr>
        <td>#${item.orderid}</td>
        <td>${item.name}</td>
        <td>${item.orderdate}</td>
        <td>\$${item.price}</td>
        <td>${item.orderstatus}</td>
        </tr>
                `;
        
        $('#tblCustomerSummary tbody').append(customerSummaryRow);
    };

    var fetchCustomerDetails = () => {
        $.ajax({
            url: 'http://localhost:5218/api/Orders/customer/17',  //orderId hard coded
            method: "GET",
            dataType: 'json',
            xhrFields: {
                withCredentials: true  // Ensures cookies are sent with the request
            },
            success: function (data) {
                console.log(data);
                //get individual values
                let customer_name = data[0].name;
                let order_id = data[0].orderId;
                let order_date = data[0].orderDate;
                // Create a JavaScript Date object from the ISO string
                order_date = new Date(order_date);
                // Format the date as "Dec 1, 2024"
                var options = { year: 'numeric', month: 'short', day: 'numeric' };
                var formattedDate = order_date.toLocaleDateString('en-US', options);
                let order_status = data[0].orderStatus;
                let price = 0;
                data.forEach(order => price += order.totalPrice);
                let context = {
                    name: customer_name,
                    orderid: order_id,
                    orderdate: formattedDate,
                    orderstatus: order_status,
                    price: price
                };

                displayCustomerSummary(context);
            },
            error: () => {
                console.log("An error occurred");
            }
        });
    }

    var fetchOrderitems = () => {
        $.ajax({
            url: 'http://localhost:5218/api/Orders/customer/17',  //orderId hard coded
            method: "GET",
            dataType: 'json',
            xhrFields: {
                withCredentials: true  // Ensures cookies are sent with the request
            },
            success: function (data) {
                console.log(data);
                var itemTotal =0;
                    
                data.forEach((order, index) => {
                    let srno = index + 1;
                    let productName = order.title;
                    let productQuantity = order.quantity;
                    let productPrice = parseFloat(order.price).toFixed(2);
                    let itemSubTotal = parseFloat(order.totalPrice).toFixed(2);
                    console.log(typeof itemSubTotal);
                    itemTotal += parseInt(order.totalPrice);
                    console.log(itemTotal);
                    context = {
                        srno: srno,
                        name: productName,
                        quantity: productQuantity,
                        price: productPrice,
                        subtotal: itemSubTotal
                    };
                    
                    displayOrderItems(context);
                
                    $('#txtOrderTotal').text(itemTotal);
                });
            },
            error: function () {
                console.log("Error occurred while fetching order items");
            }
        });
    };







    document.addEventListener("DOMContentLoaded",()=>{
        fetchOrderitems();
        fetchCustomerDetails();
    });

    
   

</script>